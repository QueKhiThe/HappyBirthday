<resources>
    <string name="app_name">Happy Birthday</string>
    <string name="happy_birthday_text">Happy birthday</string>
    <string name="jacket_compose_tutorial">Jacket Compose tutorial</string>
    <string name="jacket_compose_content">Templates are executed by applying them to a data structure. Annotations in the template refer to elements of the data structure (typically a field of a struct or a key in a map) to control execution and derive values to be displayed. Execution of the template walks the structure and sets the cursor, represented by a period \'.\' and called dot, to the value at the current location in the structure as execution proceeds.</string>
    <string name="jacket_compose_tutorial_2">In this tutorial, you build a simple UI component with declarative functions. You call Compose functions to say what elements you want and the Compose compiler does the rest. Compose is built around Composable functions. These functions let you define your app\'s UI programmatically because they let you describe how it should look and provide data dependencies, rather than focus on the process of the UI\'s construction, such as initializing an element and then attaching it to a parent. To create a Composable function, you add the @Composable annotation to the function name.</string>
</resources>